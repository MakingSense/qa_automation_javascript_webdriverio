name: Automated Suite Execution
on:
  #schedule:
   #- cron: "0 */8 * * 1-5"
  # Uncomment line 3 and line 5, and comment line 6 and line 7 to set schedule workflows 
  repository_dispatch:
   types: test-on-demand
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Information
        if: github.event_name == 'schedule'
        run: |
          echo "Schedule Execution was Launched"
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
         node-version: '12.0.0'
      - name: Testing Web App Scheduled Execution
        if: github.event_name == 'schedule'
        id: scheduled
        run: ./e2e-daily-execution-script-on-demand.sh
        timeout-minutes: 120
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: general-report
          path: ./reports/html-reports/tests-results.html
      - name: Prepare Slack message when Success
        if: success()
        id: status
        uses: actions/github-script@0.8.0
        with:
          script: |
              const fs=require('fs');
              const testsPath = `./reports/html-reports/tests-results.json`
              const testsData = fs.readFileSync(testsPath, 'utf8');
              const testsArrays = JSON.parse(testsData);

              console.log("Results")
              console.log(testsArrays.metrics)

              var total = 0
              var slack_msg = ''
              var total = Number(testsArrays.metrics.passed) + Number(testsArrays.metrics.failed) + Number(testsArrays.metrics.skipped)
              slack_msg = {
                     blocks: [
                       {
                                                                	"type": "section",
                                                                 "fields": [
                                                                   {
                                                                   	"type": "plain_text",
                                                                   	"text": ":heavy_check_mark:  Passed: " + testsArrays.metrics.passed,
                                                                   	"emoji": true
                                                                   },
                                                                   {
                                                                   	"type": "plain_text",
                                                                   	"text": ":x:  Failed: " + testsArrays.metrics.failed,
                                                                   	"emoji": true
                                                                   },
                                                                   {
                                                                   	"type": "plain_text",
                                                                   	"text": ":construction:  Repairing (skipped): " + testsArrays.metrics.skipped,
                                                                   	"emoji": true
                                                                   },
                                                                   {
                                                                   	"type": "plain_text",
                                                                   	"text": ":pushpin:  Total:  " + total,
                                                                   	"emoji": true
                                                                   }
                                                                   ]
                                                                 },
                                                                 {
                                                                    "type": "section",
                                                                   	"text": {
                                                                   			"type": "plain_text",
                                                                   			"text": "Completed in: " + testsArrays.metrics.duration
                                                                   		}
                                                                 }
               ]
              }
              console.log(slack_msg)
              return slack_msg
      - name: Send to Slack
        if: success()
        run: |
            curl -X POST ${{ secrets.SLACK_WEBHOOK_URL}} -H "Content-type: application/json" --data '${{ steps.status.outputs.result }}'
